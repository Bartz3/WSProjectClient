 @page "/userReservation"
@using ServiceReference1
@using UserReservationServiceReference
@using UserTicketServiceReference
@using WSProjectClient.Controllers
@using PlaneServiceReference
@using WSProjectClient.Data
@using FlightServiceReference
@using WSProjectClient.Models

@inject UserInfo userInfo
 
@rendermode InteractiveServer


<PageTitle>UserReservation</PageTitle>


<h1>Flight</h1>

   @if(userInfo.UserId!=0)
    {
    <h1>Zalogowano jako @userInfo.Username ID: (@userInfo.UserId)</h1>
    }
@* <button type="button" class="btn btn-primary" @onclick="ChangeToAdd" style="margin-top: 15px">Add Reservation</button>


*@
@{
    if (addReservation)
    {
        <h1>Add a reservation</h1>
        <h2>aaa</h2>

        <form>


            <div class="form-group">
                <label for="Flight">Flight</label>
                <select class="form-control" @bind="@flightId">
                    @foreach (var flight in flights)
                    {
                        // <option value="@flight.Id"> @flight.Arrival.City </option>
                        <option value="@flight.Id"> @flight.Arrival.City -> @flight.Destination.City (@flight.FlightDate.Date)</option>
                    }
                </select>
            </div>
            @*<div class="form-group">
                <label for="ticketId">Ticket ID:</label>
                <input type="text" class="form-control" id="ticketId" @bind="@ticket.Id" />
            </div>*@
            <div class="form-group">
                <label for="ticketPrice">Ticket Price:</label>
                <input type="number" class="form-control" id="ticketPrice" @bind="@ticket.Price" />
            </div>
            <div class="form-group">
                <label for="seatNumber">Seat Number:</label>
                <input type="number" class="form-control" id="seatNumber" @bind="@ticket.SeatNumber" />
            </div>



            <div class="form-group">
                <label for="firstName">First Name:</label>
                <input type="text" class="form-control" id="firstName" @bind="@ticket.FirstName" />
            </div>
            <div class="form-group">
                <label for="lastName">Last Name:</label>
                <input type="text" class="form-control" id="lastName" @bind="@ticket.LastName" />
            </div>

            <button type="button" class="btn btn-primary" @onclick="AddReservation" style="margin-top: 15px">Add Reservation</button>
            <button type="button" class="btn btn-primary" style="margin-top: 15px" @onclick="ChangeToList">Back to the list</button>
        </form>
    }
    else
    {
        <h1>Not flight</h1>
  
        <table class="table table-striped table-bordered">
            <thead class="thead-dark">
                <tr>
                    <th>Id</th>
                    <th>User</th>
                    <th>Reservation</th>
                </tr>
            </thead>
            <tbody>
                @if (reservations == null || userInfo.UserId==0 || userInfo ==null || reservations.getUserReservationResponse==null)
                {
                    <p>No reservations.</p>
                }
                else
                {

                    @foreach (var item in reservations.getUserReservationResponse)
                    {
                        <tr>
                            <td>@item.Id</td>
                            <td>@item.User.Username</td>
                            <td>@item.Flight.Arrival.City -> @item.Flight.Destination.City (@item.Flight.FlightDate.Date)</td>
                        </tr>
                    }

                    <button type="button" class="btn btn-primary" @onclick="ChangeToAdd" style="margin-bottom: 10px">Add a resrvations</button>
                }

            </tbody>
        </table>

    
    }


}
@code {
    private UserReservationServiceReference.userTickets ticket;
    private UserTicket userTicket = new UserTicket();


    private addUserReservationModel addVM = new addUserReservationModel();


    private UserReservationServiceReference.addUserReservationRequest userReservationReq;

    private bool addReservation = false;
    private int flightId;

    FlightController fc = new FlightController();
    FlightServiceReference.flight[] flights;

    UserReservationServiceReference.flight flights2;

    GetUserReservationsByUserIdResponse reservations = new GetUserReservationsByUserIdResponse();
    AirportController ac = new AirportController();
    AirportServiceReference.airport[] airports;

    UserReservationController urc = new UserReservationController();

    // addUserReservationRequest userReq = new addUserReservationRequest();

    GetUserReservationsByUserIdRequest userReq = new GetUserReservationsByUserIdRequest();



    protected override async Task OnInitializedAsync()
    {

        flights =  await fc.GetFlights();

        airports = await ac.GetAiports();

        ticket = new UserReservationServiceReference.userTickets();

        userReq.getUserReservationRequest = new UserReservationServiceReference.getUserReservationRequest();
        var test = userReq.getUserReservationRequest;

        if (userReq.getUserReservationRequest != null && userInfo.UserId != 0)
        {
            userReservationReq = new addUserReservationRequest();
            userReq.getUserReservationRequest.userId = userInfo.UserId;
            userReq.getUserReservationRequest.flightId = flightId;
            reservations = await urc.GetUserReservationByUserId(userReq);
            StateHasChanged();

        }
        else
        {
            reservations = null;
            StateHasChanged();
        }
   

    }

    public void AddReservation()
    {
        userReservationReq.userId = userInfo.UserId;
        
        // userReservationReq.flightId=flightId;
        userReq.getUserReservationRequest.flightId = flightId;
        // userReservationReq.tickets.Join(ticket);


        userReservationReq.tickets.SetValue(ticket,userReservationReq.tickets.Length+1);
        
        urc.AddReservation(userReservationReq);
    }

    public async void GetReservation()
    {
      
    }

    public void ChangeToAdd() => addReservation = true;
    public void ChangeToList() => addReservation = false;

}
