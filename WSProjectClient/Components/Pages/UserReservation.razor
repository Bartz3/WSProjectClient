 @page "/userReservation"
@using AirportServiceReference
@using FlightServiceReference
@using UserReservationServiceReference
@using UserTicketServiceReference
@using WSProjectClient.Controllers
@using PlaneServiceReference

@rendermode InteractiveServer

<PageTitle>Airports</PageTitle>


<h1>Flight</h1>
@{
    if (addFlight)
    {

            // <form>
            //     <div class="form-group">
            //         <label for="ticketName">Name:</label>
            //         <input type="text" class="form-control" id="ticketName" @bind="@ticket.Name" />
            //     </div>
            //     <div class="form-group">
            //         <label for="ticketCity">City:</label>
            //         <input type="text" class="form-control" id="ticketCity" @bind="@ticket.City" />
            //     </div>
            //     <div class="form-group">
            //         <label for="ticketCountry">Country:</label>
            //         <input type="text" class="form-control" id="ticketCountry" @bind="@ticket.Country" />
            //     </div>
            //     <button type="button" class="btn btn-primary" @onclick="AddTicket" style="margin-top: 15px">Add Ticket</button>
            // </form>
 
    }
    else
    {
        <button type="button" class="btn btn-primary" @onclick="ChangeToAdd" style="margin-bottom: 10px">Add a flight</button>
        <table class="table table-striped table-bordered">
            <thead class="thead-dark">
                <tr>
                    <th>Id</th>
                    <th>Plane</th>
                    <th>Arrival</th>
                    <th>Destination</th>
                    <th>FlightDate</th>
                </tr>
            </thead>
            <tbody>
                @if (flights == null)
                {
                    <p>Ładowanie...</p>
                }
                else
                {

                    @foreach (var item in flights)
                    {
                        <tr>
                            <td>@item.Id</td>
                            <td>@item.Plane.Type</td>
                            <td>@item.Arrival.City</td>
                            <td>@item.Destination.City</td>
                            <td>@item.FlightDate.Date</td>  
                        </tr>
                    }

                }

            </tbody>
        </table>

    }


}
@code {
    private addFlightRequest newFlight = new addFlightRequest();
    private  UserReservationServiceReference.userTickets ticket;

    bool addFlight = false;
    string name = "";
    string city = "";
    string country = "";

    FlightController fc = new FlightController();
    FlightServiceReference.flight[] flights;

    PlaneController pc = new PlaneController();
    PlaneServiceReference.plane[] planes;

    AirportController ac = new AirportController();
    AirportServiceReference.airport[] airports;

    UserReservationController urc = new UserReservationController();
    addUserReservationRequest userReq = new addUserReservationRequest();

    protected override async Task OnInitializedAsync()
    {
        // flights = await fc.GetFlights();
        // planes = await pc.GetPlanes();
        // airports = await ac.GetAiports();
        // newFlight.date = DateTime.Now;
        // urc.GetUserReservations();

        UserReservationServiceReference.getUserReservationRequest userReq = new UserReservationServiceReference.getUserReservationRequest();
        userReq.userId= 5;
        userReq.flightId = 6;
        urc.GetUserReservationByUserId(userReq);
    }

    public void AddReservation(addUserReservationRequest userReq)
    {
        urc.AddReservation(userReq);
    }

    public async void GetReservation()
    {
      
    }

    public void ChangeToAdd() => addFlight = true;
    public void ChangeToList() => addFlight = false;

}
