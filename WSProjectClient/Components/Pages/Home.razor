 @page "/"
 @using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
 @using ServiceReference1
 @using WSProjectClient.Controllers
@using WSProjectClient.Data
 @inject ProtectedSessionStorage ProtectedSessionStore
 @inject Blazored.SessionStorage.ISessionStorageService session
 @inject UserInfo userInfo
 @inject IJSRuntime jsRuntime


 <PageTitle>Users</PageTitle>

 <h1 style="margin-bottom:50px">WSProjectClient Home</h1>
@* <button class="btn btn-primary" @onclick="() => TestMethod()" type="button">Test</button> *@

 @{


    if(userInfo.UserId!=0)
    {
        <h1>Zalogowano jako @userInfo.Username (@userInfo.UserId)</h1>
    }
    <table class="table table-striped table-bordered">
         <thead class="thead-dark">
             <tr>
                 <th>Id</th>
                 <th>Username</th>
                 <th>Email</th>
             </tr>
         </thead>
         <tbody>
             @if (users == null)
             {
                 <p>Ładowanie...</p>
             }
             else
             {
                 @foreach (var item in users.OrderBy(x=>x.Id))
                 {
                     <tr>
                         <td>@item.Id</td>
                         <td>@item.Username</td>
                         <td>@item.Email</td>
                     </tr>
                 }
             }
         </tbody>
     </table>

     // <button @onclick="Test"></button>
 }

@code {
    UserController us = new UserController();
    user[] users;
    public UserInfo userStorage;

    public async Task TestMethod()
    {
       
    }

    protected override async Task OnInitializedAsync()
    {
        users = await us.GetUsers();
        // await jsRuntime.InvokeVoidAsync("Hello from Blazor");
      
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            // Wywołaj kod JavaScriptu po zakończeniu renderowania komponentu
            await jsRuntime.InvokeVoidAsync("yourJavaScriptFunction");
        }
    }


 }
